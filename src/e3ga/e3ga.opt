verbose 0
dimension 3
classname e3gai
floattype double
license 0
licensefile "custom_license.txt"
general e3gai_general_gp gp 0
c[0] = + a[0][0] * b[0][0] + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] = + a[1][0] * b[0][0] + a[0][0] * b[1][0] + a[2][2] * b[1][1] - a[1][1] * b[2][2] - a[2][1] * b[1][2] + a[1][2] * b[2][1] - a[3][0] * b[2][0] - a[2][0] * b[3][0]
c[2] = + a[1][1] * b[0][0] - a[2][2] * b[1][0] + a[0][0] * b[1][1] + a[1][0] * b[2][2] + a[2][0] * b[1][2] - a[3][0] * b[2][1] - a[1][2] * b[2][0] - a[2][1] * b[3][0]
c[3] = + a[1][2] * b[0][0] + a[2][1] * b[1][0] - a[2][0] * b[1][1] - a[3][0] * b[2][2] + a[0][0] * b[1][2] - a[1][0] * b[2][1] + a[1][1] * b[2][0] - a[2][2] * b[3][0]
c[4] = + a[2][0] * b[0][0] + a[3][0] * b[1][0] - a[1][2] * b[1][1] - a[2][1] * b[2][2] + a[1][1] * b[1][2] + a[2][2] * b[2][1] + a[0][0] * b[2][0] + a[1][0] * b[3][0]
c[5] = + a[2][1] * b[0][0] + a[1][2] * b[1][0] + a[3][0] * b[1][1] + a[2][0] * b[2][2] - a[1][0] * b[1][2] + a[0][0] * b[2][1] - a[2][2] * b[2][0] + a[1][1] * b[3][0]
c[6] = + a[2][2] * b[0][0] - a[1][1] * b[1][0] + a[1][0] * b[1][1] + a[0][0] * b[2][2] + a[3][0] * b[1][2] - a[2][0] * b[2][1] + a[2][1] * b[2][0] + a[1][2] * b[3][0]
c[7] = + a[3][0] * b[0][0] + a[2][0] * b[1][0] + a[2][1] * b[1][1] + a[1][2] * b[2][2] + a[2][2] * b[1][2] + a[1][1] * b[2][1] + a[1][0] * b[2][0] + a[0][0] * b[3][0]
general e3gai_general_lcont lcont 0
c[0] = + a[0][0] * b[0][0] + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] = + a[0][0] * b[1][0] - a[1][1] * b[2][2] + a[1][2] * b[2][1] - a[2][0] * b[3][0]
c[2] = + a[0][0] * b[1][1] + a[1][0] * b[2][2] - a[1][2] * b[2][0] - a[2][1] * b[3][0]
c[3] = + a[0][0] * b[1][2] - a[1][0] * b[2][1] + a[1][1] * b[2][0] - a[2][2] * b[3][0]
c[4] = + a[0][0] * b[2][0] + a[1][0] * b[3][0]
c[5] = + a[0][0] * b[2][1] + a[1][1] * b[3][0]
c[6] = + a[0][0] * b[2][2] + a[1][2] * b[3][0]
c[7] = + a[0][0] * b[3][0]
general e3gai_general_op op 0
c[0] = + a[0][0] * b[0][0]
c[1] = + a[1][0] * b[0][0] + a[0][0] * b[1][0]
c[2] = + a[1][1] * b[0][0] + a[0][0] * b[1][1]
c[3] = + a[1][2] * b[0][0] + a[0][0] * b[1][2]
c[4] = + a[2][0] * b[0][0] - a[1][2] * b[1][1] + a[1][1] * b[1][2] + a[0][0] * b[2][0]
c[5] = + a[2][1] * b[0][0] + a[1][2] * b[1][0] - a[1][0] * b[1][2] + a[0][0] * b[2][1]
c[6] = + a[2][2] * b[0][0] - a[1][1] * b[1][0] + a[1][0] * b[1][1] + a[0][0] * b[2][2]
c[7] = + a[3][0] * b[0][0] + a[2][0] * b[1][0] + a[2][1] * b[1][1] + a[1][2] * b[2][2] + a[2][2] * b[1][2] + a[1][1] * b[2][1] + a[1][0] * b[2][0] + a[0][0] * b[3][0]
general e3gai_general_scp scp 0
c[0] = + a[0][0] * b[0][0] + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] =
c[2] =
c[3] =
c[4] =
c[5] =
c[6] =
c[7] =
general e3gai_general_hip hip 0
c[0] = + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] = + a[2][2] * b[1][1] - a[1][1] * b[2][2] - a[2][1] * b[1][2] + a[1][2] * b[2][1] - a[3][0] * b[2][0] - a[2][0] * b[3][0]
c[2] = - a[2][2] * b[1][0] + a[1][0] * b[2][2] + a[2][0] * b[1][2] - a[3][0] * b[2][1] - a[1][2] * b[2][0] - a[2][1] * b[3][0]
c[3] = + a[2][1] * b[1][0] - a[2][0] * b[1][1] - a[3][0] * b[2][2] - a[1][0] * b[2][1] + a[1][1] * b[2][0] - a[2][2] * b[3][0]
c[4] = + a[3][0] * b[1][0] + a[1][0] * b[3][0]
c[5] = + a[3][0] * b[1][1] + a[1][1] * b[3][0]
c[6] = + a[3][0] * b[1][2] + a[1][2] * b[3][0]
c[7] =
general e3gai_general_mhip mhip 0
c[0] = + a[0][0] * b[0][0] + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] = + a[1][0] * b[0][0] + a[0][0] * b[1][0] + a[2][2] * b[1][1] - a[1][1] * b[2][2] - a[2][1] * b[1][2] + a[1][2] * b[2][1] - a[3][0] * b[2][0] - a[2][0] * b[3][0]
c[2] = + a[1][1] * b[0][0] - a[2][2] * b[1][0] + a[0][0] * b[1][1] + a[1][0] * b[2][2] + a[2][0] * b[1][2] - a[3][0] * b[2][1] - a[1][2] * b[2][0] - a[2][1] * b[3][0]
c[3] = + a[1][2] * b[0][0] + a[2][1] * b[1][0] - a[2][0] * b[1][1] - a[3][0] * b[2][2] + a[0][0] * b[1][2] - a[1][0] * b[2][1] + a[1][1] * b[2][0] - a[2][2] * b[3][0]
c[4] = + a[2][0] * b[0][0] + a[3][0] * b[1][0] + a[0][0] * b[2][0] + a[1][0] * b[3][0]
c[5] = + a[2][1] * b[0][0] + a[3][0] * b[1][1] + a[0][0] * b[2][1] + a[1][1] * b[3][0]
c[6] = + a[2][2] * b[0][0] + a[0][0] * b[2][2] + a[3][0] * b[1][2] + a[1][2] * b[3][0]
c[7] = + a[3][0] * b[0][0] + a[0][0] * b[3][0]
general e3gai_general_rcont rcont 0
c[0] = + a[0][0] * b[0][0] + a[1][0] * b[1][0] + a[1][1] * b[1][1] - a[2][2] * b[2][2] + a[1][2] * b[1][2] - a[2][1] * b[2][1] - a[2][0] * b[2][0] - a[3][0] * b[3][0]
c[1] = + a[1][0] * b[0][0] + a[2][2] * b[1][1] - a[2][1] * b[1][2] - a[3][0] * b[2][0]
c[2] = + a[1][1] * b[0][0] - a[2][2] * b[1][0] + a[2][0] * b[1][2] - a[3][0] * b[2][1]
c[3] = + a[1][2] * b[0][0] + a[2][1] * b[1][0] - a[2][0] * b[1][1] - a[3][0] * b[2][2]
c[4] = + a[2][0] * b[0][0] + a[3][0] * b[1][0]
c[5] = + a[2][1] * b[0][0] + a[3][0] * b[1][1]
c[6] = + a[2][2] * b[0][0] + a[3][0] * b[1][2]
c[7] = + a[3][0] * b[0][0]
optimize e3gai_opt_om_01x01
c[0] = + a[0] * b[0]
optimize e3gai_opt_om_03x03
c[0] = + a[0] * b[0] + a[1] * b[1] + a[2] * b[2]
c[1] = + a[3] * b[0] + a[4] * b[1] + a[5] * b[2]
c[2] = + a[6] * b[0] + a[7] * b[1] + a[8] * b[2]
