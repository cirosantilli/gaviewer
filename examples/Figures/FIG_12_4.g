// Copyright (c) 2007 -- Leo Dorst, Daniel Fontijne, Stephen Mann
// This GAviewer file generates one or more figures from the book
// Geometric Algebra for Computer Science, ISBN 0-12-369465-5.
// Use of the output of this file in presentations is permitted, with 
// reference to its source. Use of the generated figures is subject to the
// same conditions as material from the book itself.


batch FIG_12_4() {
// Created 20070426 LD
// Original title FIGcameraline()
	batch init();
	batch pantilt();

	set_window_title("FIG(12,4): The plane of rays generated by a line observation L [static figure]");

	init(1);
	set_point_size(0);
	cps = 0.5; // conformal weighting to draw points at nice size
	campos = 0.9*e1 + 0.9e-001*e2 + 9*e3;
camori = 7.537265e-001 + -2.409802e-002*e2^e3 + -6.559904e-001*e3^e1 + -3.150023e-002*e1^e2;

	f = 2;
	dynamic{camera:
	fh = f/2;
	pinhole = black(cps e0), 
	label(0,"\eqn{e_{0}}");
	boxp = no_shade(color(dm3(vp(tv(-fh e1 -fh e2 -  f e3),  f f no^e1^e2)),1,1,0,0.8)),
	box1 = color(dm3(vp(tv(-fh e2 -fh e1) ,- f f no^e1^e3)),1,1,1,0.2),
	box2 = color(dm3(vp(tv(-fh e2 -fh e1) ,  f f no^e2^e3)),1,1,1,0.2),
	box3 = color(dm3(vp(tv(+fh e2 -fh e1) ,- f f no^e1^e3)),1,1,1,0.2),
	box4 = color(dm3(vp(tv(-fh e2 +fh e1) , f f no^e2^e3)),1,1,1,0.2),
	box5 = color(dm3(vp(tv(-fh e1 -fh e2), ( f f no^e1^e2))),1,1,1,0.2),
	fvec = color(-f e3,0.8,0.8,0), lf = fvec/2+e2/4; label(lf,"\eqn{\bold{f}}");
	imcenter = c3ga_point(fvec); 
	};

	plane = (e0 -f e3)^e1^e2;
	xi = e1/3-e2/2;
	ui = e2/3+e1;

	dynamic{xim: 
		Xi = (e0 - f e3 +xi);
		L = Xi ^ ui, //  line in the image
		label(L, "\eqn{L}");
		Lconf =c3ga_point(-f e3 + xi)^ui^ni, // the line in the conformal model
		ext1 = dual(Lconf).(box2^ni); pext1 = -((no^ni).(no^ext1))/((no^ni).ext1); // end point of line in box
		ext2 = dual(Lconf).(box4^ni); pext2 = -((no^ni).(no^ext2))/((no^ni).ext2); // end point of line in box
		cpext1 = c3ga_point(pext1);
		cpext2 = c3ga_point(pext2);
		cPext1 = c3ga_point(-2 pext1);
		cPext2 = c3ga_point(-2 pext2);
		linesegment = dm2(cpext1^cpext2),
		hole = no;
		
		cmd("fgcolor 1 0 0 0.5 ");
		imt = cmd("polygon \"imtriangle\" 3 \"cpext1\" \"cpext2\" \"hole\" ");
		tut = cmd("polygon \"truetriangle\" 3 \"cPext1\" \"cPext2\" \"hole\" ");
		cmd("fgcolor k");
		lM = (e3ga) (pext1+pext2)/3; label(lM,"\bold{M}");
	};
}
